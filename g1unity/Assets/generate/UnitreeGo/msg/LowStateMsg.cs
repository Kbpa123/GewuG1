//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.UnitreeGo
{
    [Serializable]
    public class LowStateMsg : Message
    {
        public const string k_RosMessageName = "unitree_go/LowState";
        public override string RosMessageName => k_RosMessageName;

        public byte[] head;
        public byte level_flag;
        public byte frame_reserve;
        public uint[] sn;
        public uint[] version;
        public ushort bandwidth;
        public IMUStateMsg imu_state;
        public MotorStateMsg[] motor_state;
        public BmsStateMsg bms_state;
        public short[] foot_force;
        public short[] foot_force_est;
        public uint tick;
        public byte[] wireless_remote;
        public byte bit_flag;
        public float adc_reel;
        public sbyte temperature_ntc1;
        public sbyte temperature_ntc2;
        public float power_v;
        public float power_a;
        public ushort[] fan_frequency;
        public uint reserve;
        public uint crc;

        public LowStateMsg()
        {
            this.head = new byte[2];
            this.level_flag = 0;
            this.frame_reserve = 0;
            this.sn = new uint[2];
            this.version = new uint[2];
            this.bandwidth = 0;
            this.imu_state = new IMUStateMsg();
            this.motor_state = new MotorStateMsg[20];
            this.bms_state = new BmsStateMsg();
            this.foot_force = new short[4];
            this.foot_force_est = new short[4];
            this.tick = 0;
            this.wireless_remote = new byte[40];
            this.bit_flag = 0;
            this.adc_reel = 0.0f;
            this.temperature_ntc1 = 0;
            this.temperature_ntc2 = 0;
            this.power_v = 0.0f;
            this.power_a = 0.0f;
            this.fan_frequency = new ushort[4];
            this.reserve = 0;
            this.crc = 0;
        }

        public LowStateMsg(byte[] head, byte level_flag, byte frame_reserve, uint[] sn, uint[] version, ushort bandwidth, IMUStateMsg imu_state, MotorStateMsg[] motor_state, BmsStateMsg bms_state, short[] foot_force, short[] foot_force_est, uint tick, byte[] wireless_remote, byte bit_flag, float adc_reel, sbyte temperature_ntc1, sbyte temperature_ntc2, float power_v, float power_a, ushort[] fan_frequency, uint reserve, uint crc)
        {
            this.head = head;
            this.level_flag = level_flag;
            this.frame_reserve = frame_reserve;
            this.sn = sn;
            this.version = version;
            this.bandwidth = bandwidth;
            this.imu_state = imu_state;
            this.motor_state = motor_state;
            this.bms_state = bms_state;
            this.foot_force = foot_force;
            this.foot_force_est = foot_force_est;
            this.tick = tick;
            this.wireless_remote = wireless_remote;
            this.bit_flag = bit_flag;
            this.adc_reel = adc_reel;
            this.temperature_ntc1 = temperature_ntc1;
            this.temperature_ntc2 = temperature_ntc2;
            this.power_v = power_v;
            this.power_a = power_a;
            this.fan_frequency = fan_frequency;
            this.reserve = reserve;
            this.crc = crc;
        }

        public static LowStateMsg Deserialize(MessageDeserializer deserializer) => new LowStateMsg(deserializer);

        private LowStateMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.head, sizeof(byte), 2);
            deserializer.Read(out this.level_flag);
            deserializer.Read(out this.frame_reserve);
            deserializer.Read(out this.sn, sizeof(uint), 2);
            deserializer.Read(out this.version, sizeof(uint), 2);
            deserializer.Read(out this.bandwidth);
            this.imu_state = IMUStateMsg.Deserialize(deserializer);
            deserializer.Read(out this.motor_state, MotorStateMsg.Deserialize, 20);
            this.bms_state = BmsStateMsg.Deserialize(deserializer);
            deserializer.Read(out this.foot_force, sizeof(short), 4);
            deserializer.Read(out this.foot_force_est, sizeof(short), 4);
            deserializer.Read(out this.tick);
            deserializer.Read(out this.wireless_remote, sizeof(byte), 40);
            deserializer.Read(out this.bit_flag);
            deserializer.Read(out this.adc_reel);
            deserializer.Read(out this.temperature_ntc1);
            deserializer.Read(out this.temperature_ntc2);
            deserializer.Read(out this.power_v);
            deserializer.Read(out this.power_a);
            deserializer.Read(out this.fan_frequency, sizeof(ushort), 4);
            deserializer.Read(out this.reserve);
            deserializer.Read(out this.crc);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.head);
            serializer.Write(this.level_flag);
            serializer.Write(this.frame_reserve);
            serializer.Write(this.sn);
            serializer.Write(this.version);
            serializer.Write(this.bandwidth);
            serializer.Write(this.imu_state);
            serializer.Write(this.motor_state);
            serializer.Write(this.bms_state);
            serializer.Write(this.foot_force);
            serializer.Write(this.foot_force_est);
            serializer.Write(this.tick);
            serializer.Write(this.wireless_remote);
            serializer.Write(this.bit_flag);
            serializer.Write(this.adc_reel);
            serializer.Write(this.temperature_ntc1);
            serializer.Write(this.temperature_ntc2);
            serializer.Write(this.power_v);
            serializer.Write(this.power_a);
            serializer.Write(this.fan_frequency);
            serializer.Write(this.reserve);
            serializer.Write(this.crc);
        }

        public override string ToString()
        {
            return "LowStateMsg: " +
            "\nhead: " + System.String.Join(", ", head.ToList()) +
            "\nlevel_flag: " + level_flag.ToString() +
            "\nframe_reserve: " + frame_reserve.ToString() +
            "\nsn: " + System.String.Join(", ", sn.ToList()) +
            "\nversion: " + System.String.Join(", ", version.ToList()) +
            "\nbandwidth: " + bandwidth.ToString() +
            "\nimu_state: " + imu_state.ToString() +
            "\nmotor_state: " + System.String.Join(", ", motor_state.ToList()) +
            "\nbms_state: " + bms_state.ToString() +
            "\nfoot_force: " + System.String.Join(", ", foot_force.ToList()) +
            "\nfoot_force_est: " + System.String.Join(", ", foot_force_est.ToList()) +
            "\ntick: " + tick.ToString() +
            "\nwireless_remote: " + System.String.Join(", ", wireless_remote.ToList()) +
            "\nbit_flag: " + bit_flag.ToString() +
            "\nadc_reel: " + adc_reel.ToString() +
            "\ntemperature_ntc1: " + temperature_ntc1.ToString() +
            "\ntemperature_ntc2: " + temperature_ntc2.ToString() +
            "\npower_v: " + power_v.ToString() +
            "\npower_a: " + power_a.ToString() +
            "\nfan_frequency: " + System.String.Join(", ", fan_frequency.ToList()) +
            "\nreserve: " + reserve.ToString() +
            "\ncrc: " + crc.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
