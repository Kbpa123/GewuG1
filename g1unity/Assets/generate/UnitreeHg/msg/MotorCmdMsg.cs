//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.UnitreeHg
{
    [Serializable]
    public class MotorCmdMsg : Message
    {
        public const string k_RosMessageName = "unitree_hg/MotorCmd";
        public override string RosMessageName => k_RosMessageName;

        public byte mode;
        public float q;
        public float dq;
        public float tau;
        public float kp;
        public float kd;
        public uint reserve;

        public MotorCmdMsg()
        {
            this.mode = 0;
            this.q = 0.0f;
            this.dq = 0.0f;
            this.tau = 0.0f;
            this.kp = 0.0f;
            this.kd = 0.0f;
            this.reserve = 0;
        }

        public MotorCmdMsg(byte mode, float q, float dq, float tau, float kp, float kd, uint reserve)
        {
            this.mode = mode;
            this.q = q;
            this.dq = dq;
            this.tau = tau;
            this.kp = kp;
            this.kd = kd;
            this.reserve = reserve;
        }

        public static MotorCmdMsg Deserialize(MessageDeserializer deserializer) => new MotorCmdMsg(deserializer);

        private MotorCmdMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.mode);
            deserializer.Read(out this.q);
            deserializer.Read(out this.dq);
            deserializer.Read(out this.tau);
            deserializer.Read(out this.kp);
            deserializer.Read(out this.kd);
            deserializer.Read(out this.reserve);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.mode);
            serializer.Write(this.q);
            serializer.Write(this.dq);
            serializer.Write(this.tau);
            serializer.Write(this.kp);
            serializer.Write(this.kd);
            serializer.Write(this.reserve);
        }

        public override string ToString()
        {
            return "MotorCmdMsg: " +
            "\nmode: " + mode.ToString() +
            "\nq: " + q.ToString() +
            "\ndq: " + dq.ToString() +
            "\ntau: " + tau.ToString() +
            "\nkp: " + kp.ToString() +
            "\nkd: " + kd.ToString() +
            "\nreserve: " + reserve.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
