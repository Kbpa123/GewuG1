//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.UnitreeHg
{
    [Serializable]
    public class IMUStateMsg : Message
    {
        public const string k_RosMessageName = "unitree_hg/IMUState";
        public override string RosMessageName => k_RosMessageName;

        public float[] quaternion;
        public float[] gyroscope;
        public float[] accelerometer;
        public float[] rpy;
        public short temperature;

        public IMUStateMsg()
        {
            this.quaternion = new float[4];
            this.gyroscope = new float[3];
            this.accelerometer = new float[3];
            this.rpy = new float[3];
            this.temperature = 0;
        }

        public IMUStateMsg(float[] quaternion, float[] gyroscope, float[] accelerometer, float[] rpy, short temperature)
        {
            this.quaternion = quaternion;
            this.gyroscope = gyroscope;
            this.accelerometer = accelerometer;
            this.rpy = rpy;
            this.temperature = temperature;
        }

        public static IMUStateMsg Deserialize(MessageDeserializer deserializer) => new IMUStateMsg(deserializer);

        private IMUStateMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.quaternion, sizeof(float), 4);
            deserializer.Read(out this.gyroscope, sizeof(float), 3);
            deserializer.Read(out this.accelerometer, sizeof(float), 3);
            deserializer.Read(out this.rpy, sizeof(float), 3);
            deserializer.Read(out this.temperature);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.quaternion);
            serializer.Write(this.gyroscope);
            serializer.Write(this.accelerometer);
            serializer.Write(this.rpy);
            serializer.Write(this.temperature);
        }

        public override string ToString()
        {
            return "IMUStateMsg: " +
            "\nquaternion: " + System.String.Join(", ", quaternion.ToList()) +
            "\ngyroscope: " + System.String.Join(", ", gyroscope.ToList()) +
            "\naccelerometer: " + System.String.Join(", ", accelerometer.ToList()) +
            "\nrpy: " + System.String.Join(", ", rpy.ToList()) +
            "\ntemperature: " + temperature.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
